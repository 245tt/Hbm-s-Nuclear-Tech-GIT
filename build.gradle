buildscript {
	repositories {
		maven { url = 'https://files.minecraftforge.net/maven' }
		maven { url = 'https://plugins.gradle.org/m2' }
		mavenCentral()
	}
	dependencies {
		classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
	}
}

apply plugin: 'forge'

def jsonFile = file('./src/main/resources/mcmod.info')
def parsedJson = new groovy.json.JsonSlurper().parseText(jsonFile.text)
version = parsedJson.version
group = "com.hbm" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "HBM-NTM"

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

minecraft {
	version = "1.7.10-10.13.4.1558-1.7.10"
	runDir = "eclipse"
}

repositories {
	maven {
		name = 'ModMaven'
		url = 'https://modmaven.dev'
	}
}

dependencies {
	compile 'codechicken:CodeChickenCore:1.7.10-1.0.4.29:dev'
	compile 'codechicken:CodeChickenLib:1.7.10-1.1.3.140:dev'
	compile 'codechicken:NotEnoughItems:1.7.10-1.0.3.74:dev'
}

processResources {
	// this will ensure that this task is redone when the versions change.
	inputs.property "version", project.version
	inputs.property "mcversion", project.minecraft.version

	// replace stuff in mcmod.info, nothing else
	from(sourceSets.main.resources.srcDirs) {
		include 'mcmod.info'
		
		// replace version and mcversion
		expand 'version':project.version, 'mcversion':project.minecraft.version
	}
		
	// copy everything else, thats not the mcmod.info
	from(sourceSets.main.resources.srcDirs) {
		exclude 'mcmod.info'
	}
}

task version {
	doFirst {
		println project.version
	}
}
